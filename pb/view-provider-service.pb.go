// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: view-provider-service.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_view_provider_service_proto protoreflect.FileDescriptor

var file_view_provider_service_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x76, 0x69, 0x65, 0x77, 0x2d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x67,
	0x65, 0x74, 0x2d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2d, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x2d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x32, 0xb0, 0x07, 0x0a, 0x13, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x12, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70,
	0x12, 0x12, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x41, 0x64, 0x64,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x12, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x41, 0x64,
	0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x35, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x12,
	0x2e, 0x44, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x13, 0x2e, 0x44, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x68,
	0x6f, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x68, 0x6f, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x16, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f,
	0x70, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f,
	0x70, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x68, 0x6f, 0x70, 0x4b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x4b, 0x65, 0x65, 0x70, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x4b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x1c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41,
	0x6e, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x6e,
	0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x41, 0x6e, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1a, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x16, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x48, 0x6f,
	0x75, 0x72, 0x73, 0x12, 0x1e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x12, 0x11, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x3a, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x30, 0x0a, 0x26, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x61,
	0x70, 0x61, 0x6e, 0x61, 0x76, 0x79, 0x61, 0x70, 0x61, 0x72, 0x2e, 0x61, 0x61, 0x70, 0x61, 0x6e,
	0x61, 0x76, 0x79, 0x61, 0x70, 0x61, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x50, 0x01, 0x5a, 0x04, 0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_view_provider_service_proto_goTypes = []interface{}{
	(*CreateShopRequest)(nil),                    // 0: CreateShopRequest
	(*DeleteShopRequest)(nil),                    // 1: DeleteShopRequest
	(*AddProductRequest)(nil),                    // 2: AddProductRequest
	(*DelProductRequest)(nil),                    // 3: DelProductRequest
	(*GetShopDetailsRequest)(nil),                // 4: GetShopDetailsRequest
	(*UpdateShopPrimaryImageRequest)(nil),        // 5: UpdateShopPrimaryImageRequest
	(*UpdateShopKeeperNameRequest)(nil),          // 6: UpdateShopKeeperNameRequest
	(*UpdateShopAddressAndLocationRequest)(nil),  // 7: UpdateShopAddressAndLocationRequest
	(*UpdateCategoryRequest)(nil),                // 8: UpdateCategoryRequest
	(*UpdateBusinessInfoRequest)(nil),            // 9: UpdateBusinessInfoRequest
	(*UpdateOperationalHoursRequest)(nil),        // 10: UpdateOperationalHoursRequest
	(*GetOrdersRequest)(nil),                     // 11: GetOrdersRequest
	(*GetProductsRequest)(nil),                   // 12: GetProductsRequest
	(*CreateShopResponse)(nil),                   // 13: CreateShopResponse
	(*DeleteShopResponse)(nil),                   // 14: DeleteShopResponse
	(*AddProductResponse)(nil),                   // 15: AddProductResponse
	(*DelProductResponse)(nil),                   // 16: DelProductResponse
	(*GetShopDetailsResponse)(nil),               // 17: GetShopDetailsResponse
	(*UpdateShopPrimaryImageResponse)(nil),       // 18: UpdateShopPrimaryImageResponse
	(*UpdateShopKeeperNameResponse)(nil),         // 19: UpdateShopKeeperNameResponse
	(*UpdateShopAddressAndLocationResponse)(nil), // 20: UpdateShopAddressAndLocationResponse
	(*UpdateCategoryResponse)(nil),               // 21: UpdateCategoryResponse
	(*UpdateBusinessInfoResponse)(nil),           // 22: UpdateBusinessInfoResponse
	(*UpdateOperationalHoursResponse)(nil),       // 23: UpdateOperationalHoursResponse
	(*GetOrdersResponse)(nil),                    // 24: GetOrdersResponse
	(*GetProductsResponse)(nil),                  // 25: GetProductsResponse
}
var file_view_provider_service_proto_depIdxs = []int32{
	0,  // 0: ViewProviderService.CreateShop:input_type -> CreateShopRequest
	1,  // 1: ViewProviderService.DeleteShop:input_type -> DeleteShopRequest
	2,  // 2: ViewProviderService.AddProduct:input_type -> AddProductRequest
	3,  // 3: ViewProviderService.DelProduct:input_type -> DelProductRequest
	4,  // 4: ViewProviderService.GetShopDetails:input_type -> GetShopDetailsRequest
	5,  // 5: ViewProviderService.UpdateShopPrimaryImage:input_type -> UpdateShopPrimaryImageRequest
	6,  // 6: ViewProviderService.UpdateShopKeeperName:input_type -> UpdateShopKeeperNameRequest
	7,  // 7: ViewProviderService.UpdateShopAddressAndLocation:input_type -> UpdateShopAddressAndLocationRequest
	8,  // 8: ViewProviderService.UpdateCategory:input_type -> UpdateCategoryRequest
	9,  // 9: ViewProviderService.UpdateBusinessInfo:input_type -> UpdateBusinessInfoRequest
	10, // 10: ViewProviderService.UpdateOperationalHours:input_type -> UpdateOperationalHoursRequest
	11, // 11: ViewProviderService.GetOrders:input_type -> GetOrdersRequest
	12, // 12: ViewProviderService.GetProducts:input_type -> GetProductsRequest
	13, // 13: ViewProviderService.CreateShop:output_type -> CreateShopResponse
	14, // 14: ViewProviderService.DeleteShop:output_type -> DeleteShopResponse
	15, // 15: ViewProviderService.AddProduct:output_type -> AddProductResponse
	16, // 16: ViewProviderService.DelProduct:output_type -> DelProductResponse
	17, // 17: ViewProviderService.GetShopDetails:output_type -> GetShopDetailsResponse
	18, // 18: ViewProviderService.UpdateShopPrimaryImage:output_type -> UpdateShopPrimaryImageResponse
	19, // 19: ViewProviderService.UpdateShopKeeperName:output_type -> UpdateShopKeeperNameResponse
	20, // 20: ViewProviderService.UpdateShopAddressAndLocation:output_type -> UpdateShopAddressAndLocationResponse
	21, // 21: ViewProviderService.UpdateCategory:output_type -> UpdateCategoryResponse
	22, // 22: ViewProviderService.UpdateBusinessInfo:output_type -> UpdateBusinessInfoResponse
	23, // 23: ViewProviderService.UpdateOperationalHours:output_type -> UpdateOperationalHoursResponse
	24, // 24: ViewProviderService.GetOrders:output_type -> GetOrdersResponse
	25, // 25: ViewProviderService.GetProducts:output_type -> GetProductsResponse
	13, // [13:26] is the sub-list for method output_type
	0,  // [0:13] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_view_provider_service_proto_init() }
func file_view_provider_service_proto_init() {
	if File_view_provider_service_proto != nil {
		return
	}
	file_get_message_proto_init()
	file_update_message_proto_init()
	file_create_delete_message_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_view_provider_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_view_provider_service_proto_goTypes,
		DependencyIndexes: file_view_provider_service_proto_depIdxs,
	}.Build()
	File_view_provider_service_proto = out.File
	file_view_provider_service_proto_rawDesc = nil
	file_view_provider_service_proto_goTypes = nil
	file_view_provider_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ViewProviderServiceClient is the client API for ViewProviderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ViewProviderServiceClient interface {
	CreateShop(ctx context.Context, in *CreateShopRequest, opts ...grpc.CallOption) (*CreateShopResponse, error)
	DeleteShop(ctx context.Context, in *DeleteShopRequest, opts ...grpc.CallOption) (*DeleteShopResponse, error)
	AddProduct(ctx context.Context, in *AddProductRequest, opts ...grpc.CallOption) (*AddProductResponse, error)
	DelProduct(ctx context.Context, in *DelProductRequest, opts ...grpc.CallOption) (*DelProductResponse, error)
	GetShopDetails(ctx context.Context, in *GetShopDetailsRequest, opts ...grpc.CallOption) (*GetShopDetailsResponse, error)
	UpdateShopPrimaryImage(ctx context.Context, in *UpdateShopPrimaryImageRequest, opts ...grpc.CallOption) (*UpdateShopPrimaryImageResponse, error)
	UpdateShopKeeperName(ctx context.Context, in *UpdateShopKeeperNameRequest, opts ...grpc.CallOption) (*UpdateShopKeeperNameResponse, error)
	UpdateShopAddressAndLocation(ctx context.Context, in *UpdateShopAddressAndLocationRequest, opts ...grpc.CallOption) (*UpdateShopAddressAndLocationResponse, error)
	UpdateCategory(ctx context.Context, in *UpdateCategoryRequest, opts ...grpc.CallOption) (*UpdateCategoryResponse, error)
	UpdateBusinessInfo(ctx context.Context, in *UpdateBusinessInfoRequest, opts ...grpc.CallOption) (*UpdateBusinessInfoResponse, error)
	UpdateOperationalHours(ctx context.Context, in *UpdateOperationalHoursRequest, opts ...grpc.CallOption) (*UpdateOperationalHoursResponse, error)
	GetOrders(ctx context.Context, in *GetOrdersRequest, opts ...grpc.CallOption) (ViewProviderService_GetOrdersClient, error)
	GetProducts(ctx context.Context, in *GetProductsRequest, opts ...grpc.CallOption) (ViewProviderService_GetProductsClient, error)
}

type viewProviderServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewViewProviderServiceClient(cc grpc.ClientConnInterface) ViewProviderServiceClient {
	return &viewProviderServiceClient{cc}
}

func (c *viewProviderServiceClient) CreateShop(ctx context.Context, in *CreateShopRequest, opts ...grpc.CallOption) (*CreateShopResponse, error) {
	out := new(CreateShopResponse)
	err := c.cc.Invoke(ctx, "/ViewProviderService/CreateShop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *viewProviderServiceClient) DeleteShop(ctx context.Context, in *DeleteShopRequest, opts ...grpc.CallOption) (*DeleteShopResponse, error) {
	out := new(DeleteShopResponse)
	err := c.cc.Invoke(ctx, "/ViewProviderService/DeleteShop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *viewProviderServiceClient) AddProduct(ctx context.Context, in *AddProductRequest, opts ...grpc.CallOption) (*AddProductResponse, error) {
	out := new(AddProductResponse)
	err := c.cc.Invoke(ctx, "/ViewProviderService/AddProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *viewProviderServiceClient) DelProduct(ctx context.Context, in *DelProductRequest, opts ...grpc.CallOption) (*DelProductResponse, error) {
	out := new(DelProductResponse)
	err := c.cc.Invoke(ctx, "/ViewProviderService/DelProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *viewProviderServiceClient) GetShopDetails(ctx context.Context, in *GetShopDetailsRequest, opts ...grpc.CallOption) (*GetShopDetailsResponse, error) {
	out := new(GetShopDetailsResponse)
	err := c.cc.Invoke(ctx, "/ViewProviderService/GetShopDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *viewProviderServiceClient) UpdateShopPrimaryImage(ctx context.Context, in *UpdateShopPrimaryImageRequest, opts ...grpc.CallOption) (*UpdateShopPrimaryImageResponse, error) {
	out := new(UpdateShopPrimaryImageResponse)
	err := c.cc.Invoke(ctx, "/ViewProviderService/UpdateShopPrimaryImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *viewProviderServiceClient) UpdateShopKeeperName(ctx context.Context, in *UpdateShopKeeperNameRequest, opts ...grpc.CallOption) (*UpdateShopKeeperNameResponse, error) {
	out := new(UpdateShopKeeperNameResponse)
	err := c.cc.Invoke(ctx, "/ViewProviderService/UpdateShopKeeperName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *viewProviderServiceClient) UpdateShopAddressAndLocation(ctx context.Context, in *UpdateShopAddressAndLocationRequest, opts ...grpc.CallOption) (*UpdateShopAddressAndLocationResponse, error) {
	out := new(UpdateShopAddressAndLocationResponse)
	err := c.cc.Invoke(ctx, "/ViewProviderService/UpdateShopAddressAndLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *viewProviderServiceClient) UpdateCategory(ctx context.Context, in *UpdateCategoryRequest, opts ...grpc.CallOption) (*UpdateCategoryResponse, error) {
	out := new(UpdateCategoryResponse)
	err := c.cc.Invoke(ctx, "/ViewProviderService/UpdateCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *viewProviderServiceClient) UpdateBusinessInfo(ctx context.Context, in *UpdateBusinessInfoRequest, opts ...grpc.CallOption) (*UpdateBusinessInfoResponse, error) {
	out := new(UpdateBusinessInfoResponse)
	err := c.cc.Invoke(ctx, "/ViewProviderService/UpdateBusinessInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *viewProviderServiceClient) UpdateOperationalHours(ctx context.Context, in *UpdateOperationalHoursRequest, opts ...grpc.CallOption) (*UpdateOperationalHoursResponse, error) {
	out := new(UpdateOperationalHoursResponse)
	err := c.cc.Invoke(ctx, "/ViewProviderService/UpdateOperationalHours", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *viewProviderServiceClient) GetOrders(ctx context.Context, in *GetOrdersRequest, opts ...grpc.CallOption) (ViewProviderService_GetOrdersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ViewProviderService_serviceDesc.Streams[0], "/ViewProviderService/GetOrders", opts...)
	if err != nil {
		return nil, err
	}
	x := &viewProviderServiceGetOrdersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ViewProviderService_GetOrdersClient interface {
	Recv() (*GetOrdersResponse, error)
	grpc.ClientStream
}

type viewProviderServiceGetOrdersClient struct {
	grpc.ClientStream
}

func (x *viewProviderServiceGetOrdersClient) Recv() (*GetOrdersResponse, error) {
	m := new(GetOrdersResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *viewProviderServiceClient) GetProducts(ctx context.Context, in *GetProductsRequest, opts ...grpc.CallOption) (ViewProviderService_GetProductsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ViewProviderService_serviceDesc.Streams[1], "/ViewProviderService/GetProducts", opts...)
	if err != nil {
		return nil, err
	}
	x := &viewProviderServiceGetProductsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ViewProviderService_GetProductsClient interface {
	Recv() (*GetProductsResponse, error)
	grpc.ClientStream
}

type viewProviderServiceGetProductsClient struct {
	grpc.ClientStream
}

func (x *viewProviderServiceGetProductsClient) Recv() (*GetProductsResponse, error) {
	m := new(GetProductsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ViewProviderServiceServer is the server API for ViewProviderService service.
type ViewProviderServiceServer interface {
	CreateShop(context.Context, *CreateShopRequest) (*CreateShopResponse, error)
	DeleteShop(context.Context, *DeleteShopRequest) (*DeleteShopResponse, error)
	AddProduct(context.Context, *AddProductRequest) (*AddProductResponse, error)
	DelProduct(context.Context, *DelProductRequest) (*DelProductResponse, error)
	GetShopDetails(context.Context, *GetShopDetailsRequest) (*GetShopDetailsResponse, error)
	UpdateShopPrimaryImage(context.Context, *UpdateShopPrimaryImageRequest) (*UpdateShopPrimaryImageResponse, error)
	UpdateShopKeeperName(context.Context, *UpdateShopKeeperNameRequest) (*UpdateShopKeeperNameResponse, error)
	UpdateShopAddressAndLocation(context.Context, *UpdateShopAddressAndLocationRequest) (*UpdateShopAddressAndLocationResponse, error)
	UpdateCategory(context.Context, *UpdateCategoryRequest) (*UpdateCategoryResponse, error)
	UpdateBusinessInfo(context.Context, *UpdateBusinessInfoRequest) (*UpdateBusinessInfoResponse, error)
	UpdateOperationalHours(context.Context, *UpdateOperationalHoursRequest) (*UpdateOperationalHoursResponse, error)
	GetOrders(*GetOrdersRequest, ViewProviderService_GetOrdersServer) error
	GetProducts(*GetProductsRequest, ViewProviderService_GetProductsServer) error
}

// UnimplementedViewProviderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedViewProviderServiceServer struct {
}

func (*UnimplementedViewProviderServiceServer) CreateShop(context.Context, *CreateShopRequest) (*CreateShopResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateShop not implemented")
}
func (*UnimplementedViewProviderServiceServer) DeleteShop(context.Context, *DeleteShopRequest) (*DeleteShopResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteShop not implemented")
}
func (*UnimplementedViewProviderServiceServer) AddProduct(context.Context, *AddProductRequest) (*AddProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddProduct not implemented")
}
func (*UnimplementedViewProviderServiceServer) DelProduct(context.Context, *DelProductRequest) (*DelProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelProduct not implemented")
}
func (*UnimplementedViewProviderServiceServer) GetShopDetails(context.Context, *GetShopDetailsRequest) (*GetShopDetailsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShopDetails not implemented")
}
func (*UnimplementedViewProviderServiceServer) UpdateShopPrimaryImage(context.Context, *UpdateShopPrimaryImageRequest) (*UpdateShopPrimaryImageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateShopPrimaryImage not implemented")
}
func (*UnimplementedViewProviderServiceServer) UpdateShopKeeperName(context.Context, *UpdateShopKeeperNameRequest) (*UpdateShopKeeperNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateShopKeeperName not implemented")
}
func (*UnimplementedViewProviderServiceServer) UpdateShopAddressAndLocation(context.Context, *UpdateShopAddressAndLocationRequest) (*UpdateShopAddressAndLocationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateShopAddressAndLocation not implemented")
}
func (*UnimplementedViewProviderServiceServer) UpdateCategory(context.Context, *UpdateCategoryRequest) (*UpdateCategoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCategory not implemented")
}
func (*UnimplementedViewProviderServiceServer) UpdateBusinessInfo(context.Context, *UpdateBusinessInfoRequest) (*UpdateBusinessInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBusinessInfo not implemented")
}
func (*UnimplementedViewProviderServiceServer) UpdateOperationalHours(context.Context, *UpdateOperationalHoursRequest) (*UpdateOperationalHoursResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOperationalHours not implemented")
}
func (*UnimplementedViewProviderServiceServer) GetOrders(*GetOrdersRequest, ViewProviderService_GetOrdersServer) error {
	return status.Errorf(codes.Unimplemented, "method GetOrders not implemented")
}
func (*UnimplementedViewProviderServiceServer) GetProducts(*GetProductsRequest, ViewProviderService_GetProductsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetProducts not implemented")
}

func RegisterViewProviderServiceServer(s *grpc.Server, srv ViewProviderServiceServer) {
	s.RegisterService(&_ViewProviderService_serviceDesc, srv)
}

func _ViewProviderService_CreateShop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateShopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ViewProviderServiceServer).CreateShop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ViewProviderService/CreateShop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ViewProviderServiceServer).CreateShop(ctx, req.(*CreateShopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ViewProviderService_DeleteShop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteShopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ViewProviderServiceServer).DeleteShop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ViewProviderService/DeleteShop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ViewProviderServiceServer).DeleteShop(ctx, req.(*DeleteShopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ViewProviderService_AddProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ViewProviderServiceServer).AddProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ViewProviderService/AddProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ViewProviderServiceServer).AddProduct(ctx, req.(*AddProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ViewProviderService_DelProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ViewProviderServiceServer).DelProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ViewProviderService/DelProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ViewProviderServiceServer).DelProduct(ctx, req.(*DelProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ViewProviderService_GetShopDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShopDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ViewProviderServiceServer).GetShopDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ViewProviderService/GetShopDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ViewProviderServiceServer).GetShopDetails(ctx, req.(*GetShopDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ViewProviderService_UpdateShopPrimaryImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateShopPrimaryImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ViewProviderServiceServer).UpdateShopPrimaryImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ViewProviderService/UpdateShopPrimaryImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ViewProviderServiceServer).UpdateShopPrimaryImage(ctx, req.(*UpdateShopPrimaryImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ViewProviderService_UpdateShopKeeperName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateShopKeeperNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ViewProviderServiceServer).UpdateShopKeeperName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ViewProviderService/UpdateShopKeeperName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ViewProviderServiceServer).UpdateShopKeeperName(ctx, req.(*UpdateShopKeeperNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ViewProviderService_UpdateShopAddressAndLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateShopAddressAndLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ViewProviderServiceServer).UpdateShopAddressAndLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ViewProviderService/UpdateShopAddressAndLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ViewProviderServiceServer).UpdateShopAddressAndLocation(ctx, req.(*UpdateShopAddressAndLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ViewProviderService_UpdateCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ViewProviderServiceServer).UpdateCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ViewProviderService/UpdateCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ViewProviderServiceServer).UpdateCategory(ctx, req.(*UpdateCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ViewProviderService_UpdateBusinessInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBusinessInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ViewProviderServiceServer).UpdateBusinessInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ViewProviderService/UpdateBusinessInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ViewProviderServiceServer).UpdateBusinessInfo(ctx, req.(*UpdateBusinessInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ViewProviderService_UpdateOperationalHours_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOperationalHoursRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ViewProviderServiceServer).UpdateOperationalHours(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ViewProviderService/UpdateOperationalHours",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ViewProviderServiceServer).UpdateOperationalHours(ctx, req.(*UpdateOperationalHoursRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ViewProviderService_GetOrders_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetOrdersRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ViewProviderServiceServer).GetOrders(m, &viewProviderServiceGetOrdersServer{stream})
}

type ViewProviderService_GetOrdersServer interface {
	Send(*GetOrdersResponse) error
	grpc.ServerStream
}

type viewProviderServiceGetOrdersServer struct {
	grpc.ServerStream
}

func (x *viewProviderServiceGetOrdersServer) Send(m *GetOrdersResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _ViewProviderService_GetProducts_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetProductsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ViewProviderServiceServer).GetProducts(m, &viewProviderServiceGetProductsServer{stream})
}

type ViewProviderService_GetProductsServer interface {
	Send(*GetProductsResponse) error
	grpc.ServerStream
}

type viewProviderServiceGetProductsServer struct {
	grpc.ServerStream
}

func (x *viewProviderServiceGetProductsServer) Send(m *GetProductsResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _ViewProviderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ViewProviderService",
	HandlerType: (*ViewProviderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateShop",
			Handler:    _ViewProviderService_CreateShop_Handler,
		},
		{
			MethodName: "DeleteShop",
			Handler:    _ViewProviderService_DeleteShop_Handler,
		},
		{
			MethodName: "AddProduct",
			Handler:    _ViewProviderService_AddProduct_Handler,
		},
		{
			MethodName: "DelProduct",
			Handler:    _ViewProviderService_DelProduct_Handler,
		},
		{
			MethodName: "GetShopDetails",
			Handler:    _ViewProviderService_GetShopDetails_Handler,
		},
		{
			MethodName: "UpdateShopPrimaryImage",
			Handler:    _ViewProviderService_UpdateShopPrimaryImage_Handler,
		},
		{
			MethodName: "UpdateShopKeeperName",
			Handler:    _ViewProviderService_UpdateShopKeeperName_Handler,
		},
		{
			MethodName: "UpdateShopAddressAndLocation",
			Handler:    _ViewProviderService_UpdateShopAddressAndLocation_Handler,
		},
		{
			MethodName: "UpdateCategory",
			Handler:    _ViewProviderService_UpdateCategory_Handler,
		},
		{
			MethodName: "UpdateBusinessInfo",
			Handler:    _ViewProviderService_UpdateBusinessInfo_Handler,
		},
		{
			MethodName: "UpdateOperationalHours",
			Handler:    _ViewProviderService_UpdateOperationalHours_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetOrders",
			Handler:       _ViewProviderService_GetOrders_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetProducts",
			Handler:       _ViewProviderService_GetProducts_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "view-provider-service.proto",
}
